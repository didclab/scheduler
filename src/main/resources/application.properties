spring.application.name=ODSTransferSchedulerService
server.port=8061

#Vault config
spring.cloud.vault.host = host.docker.internal
spring.cloud.vault.port = 8200
spring.cloud.vault.scheme = http
spring.cloud.vault.authentication = TOKEN
spring.cloud.vault.token = ${VAULT_TOKEN}
spring.cloud.vault.kv.enabled = true
spring.config.import = vault://secret/transfer_scheduler

#Eureka config
eureka.client.enabled=true
eureka.client.serviceUrl.defaultZone= http://${EUREKA_USER:admin}:${EUREKA_PASS:admin}@${EUREKA_URI:localhost:8090}/eureka
eureka.client.healthcheck.enabled=true
eureka.instance.metadata-map.startup= ${random.int}
cred.service.eureka.uri=http://EndpointCredentialService/v1/endpoint-cred
#cred.service.eureka.uri=http://localhost:8081/v1/endpoint-cred

gdrive.appname=OneDataShare-Prod
gdrive.client.id=${ODS_GDRIVE_CLIENT_ID}
gdrive.client.secret=${ODS_GDRIVE_CLIENT_SECRET}

cred.service.uri=http://localhost:8081/v1/endpoint-cred/
ods.rabbitmq.exchange=ods.exchange
ods.rabbitmq.queue=transferqueue
ods.rabbitmq.routingkey=ods.routing
spring.rabbitmq.addresses=${RMQ_ADDRESS}
spring.rabbitmq.port=${AMPQ_PORT:5672}
spring.rabbitmq.username=${AMPQ_USER:guest}
spring.rabbitmq.password=${AMPQ_PWD:guest}

dropbox.identifier=${ODS_DROPBOX_IDENTIFIER:OneDataShare-DIDCLab}
